{"version":3,"sources":["store/ducks/terminals/actionCreators.js","store/ducks/terminals/selectors.js","components/AddTerminalModal.jsx","store/ducks/user/actionCreators.js","store/ducks/user/selectors.js","components/addUserModal.jsx","components/SideMenu.jsx","components/TerminalTable.jsx","pages/HomePage.jsx","pages/AuthPage.jsx","App.js","store/ducks/terminals/terminalsReducer.js","store/ducks/user/userReducer.js","store/rootReducer.js","core/axios.js","api/terminalsApi.js","store/ducks/terminals/saga.js","api/authApi.js","store/ducks/user/saga.js","store/sagas.js","store/store.js","index.js"],"names":["TERMINALS_ACTION_TYPES","setTerminals","payload","type","setNewTerminal","setLoadingStatus","setLoadingStatusAddTerminal","fetchTerminals","LOADING_STATUSES","selectTerminalsState","state","terminals","selectTerminalsItem","items","selectAddTerminalStatus","statusAddTerminal","selectTerminalsIsLoading","loadingStatus","selectTerminalsLoadingStatus","terminalSchema","yup","shape","city","required","min","organization","address","model","yearOfIssue","AddTerminalModal","handleClose","open","useForm","resolver","yupResolver","handleSubmit","control","register","errors","reset","useSelector","dispatch","useDispatch","onSubmit","data","a","Dialog","onClose","DialogContent","DialogTitle","name","defaultValue","rules","render","TextField","inputRef","label","variant","margin","fullWidth","helperText","message","error","autoComplete","DialogActions","Button","onClick","color","disabled","USER_ACTION_TYPES","setUserData","setUserLoadingState","setRegisterLoadingState","selectUserState","user","selectUserData","selectIsAuth","selectIsAdmin","isAdmin","selectCanEdit","canEdit","selectLoadingUserState","selectRegisterLoadingState","registerLoadingStatus","userSchema","username","max","password","confirm","oneOf","AddUserModal","DialogContentText","style","textAlign","props","FormControlLabel","Checkbox","onChange","e","target","checked","value","useSideMenuStyles","makeStyles","sideMenuWrapper","sideMenuContent","height","padding","border","borderRight","notification","redColor","SideMenu","classes","React","useState","addTerminalOpen","setAddTerminalOpen","addUserOpen","setAddUserOpen","handleToggleAddUser","Grid","md","className","item","Paper","elevation","square","List","ListItem","button","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","searchForm","display","searchInput","width","searchSelect","EnhancedTableToolbar","handleRemoveItems","visibleSearchField","setVisibleSearchField","Toolbar","clsx","Typography","component","searchFromData","FormControl","InputLabel","htmlFor","Select","native","aria-label","Tooltip","IconButton","useStyles","paper","marginBottom","table","minWidth","clip","overflow","position","top","offline","fontWeight","online","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","terminalsIsLoading","useEffect","emptyRows","Math","length","CircularProgress","TableContainer","Table","aria-labelledby","size","newSelecteds","n","_id","TableBody","slice","terminal","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","isOnline","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","useHomeStyles","homePageWrapper","flexDirection","homePageContainer","homeMain","alignItems","justifyContent","homeContent","HomePage","container","signinSchema","AuthPage","marginTop","useAppStyles","appWrapper","minHeight","appContainer","maxWidth","borderRadius","boxShadow","preloader","bottom","left","right","App","userLoadingStatus","isAuth","isReady","initialTerminalsState","terminalsReducer","produce","draft","action","push","initialUserState","undefined","userReducer","rootReducer","combineReducers","axios","interceptors","request","use","config","headers","window","localStorage","getItem","TerminalsApi","fetchAllTerminals","get","fetchSearchTerminal","searchConfig","searchValue","removeTerminals","arrayTerminals","delete","addTerminal","formData","post","fetchTerminalsRequest","fetchRemoveTerminalsRequest","fetchAddTerminalRequest","terminalsSaga","call","put","newTerminal","console","log","takeEvery","AuthApi","login","loginData","registerData","getMe","fetchSignInRequest","fetchLogoutRequest","fetchRegisterRequest","fetchCheckUserDataRequest","userSaga","setItem","token","removeItem","rootSaga","all","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cc161c3a.chunk.js","sourcesContent":["export const TERMINALS_ACTION_TYPES = {\r\n  SET_TERMINALS: \"terminals/SET_TERMINALS\",\r\n  SET_NEW_TERMINAL: \"terminals/SET_NEW_TERMINAL\",\r\n  FETCH_TERMINALS: \"terminals/FETCH_TERMINALS\",\r\n  FETCH_ADD_NEW_TERMINAL: \"terminals/FETCH_ADD_NEW_TERMINAL\",\r\n  FETCH_REMOVE_TERMINALS: \"terminals/FETCH_REMOVE_TERMINALS\",\r\n  // FETCH_START_SOCKET_LISTENING: \"terminals/FETCH_START_SOCKET_LISTENING\",\r\n  SET_LOADING_STATUS: \"terminals/SET_LOADING_STATUS\",\r\n  SET_LOADING_STATUS_ADD_TERMINAL: \"terminals/SET_LOADING_STATUS_ADD_TERMINAL\",\r\n};\r\n\r\n\r\n\r\nexport const setTerminals = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.SET_TERMINALS,\r\n  payload,\r\n});\r\n\r\nexport const setNewTerminal = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.SET_NEW_TERMINAL,\r\n  payload,\r\n});\r\n\r\nexport const fetchAddTerminal = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.FETCH_ADD_NEW_TERMINAL,\r\n  payload,\r\n});\r\n\r\nexport const setLoadingStatus = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.SET_LOADING_STATUS,\r\n  payload,\r\n});\r\n\r\nexport const setLoadingStatusAddTerminal = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.SET_LOADING_STATUS_ADD_TERMINAL,\r\n  payload,\r\n});\r\n\r\nexport const fetchTerminals = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.FETCH_TERMINALS,\r\n  payload\r\n});\r\n\r\nexport const fetchRemoveTerminals = (payload) => ({\r\n  type: TERMINALS_ACTION_TYPES.FETCH_REMOVE_TERMINALS,\r\n  payload \r\n})\r\n","export const LOADING_STATUSES = {\r\n  NEVER: \"NEVER\",\r\n  LOADING: \"LOADING\",\r\n  LOADED: \"LOADED\",\r\n  ERROR: \"ERROR\",\r\n  SUCCESS: \"SUCCESS\" \r\n};\r\n\r\nexport const selectTerminalsState = (state) => state.terminals;\r\nexport const selectTerminalsItem = (state) => selectTerminalsState(state).items;\r\nexport const selectTerminalsLoadingStatus = (state) =>\r\n  selectTerminalsState(state).loadingStatus;\r\nexport const selectAddTerminalStatus = (state) =>\r\n  selectTerminalsState(state).statusAddTerminal;\r\n\r\nexport const selectTerminalsIsLoading = (state) =>\r\n  selectTerminalsLoadingStatus(state) === LOADING_STATUSES.LOADING;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAddTerminal } from \"../store/ducks/terminals/actionCreators\";\r\nimport { selectAddTerminalStatus } from \"../store/ducks/terminals/selectors\";\r\n\r\nconst terminalSchema = yup.object().shape({\r\n  city: yup\r\n    .string()\r\n    .required(\"Обязательное поле\")\r\n    .min(2, \"Минимальное количество символов 2\"),\r\n  organization: yup.string().required(\"Обязательное поле\"),\r\n  address: yup.string().required(\"Обязательное поле\"),\r\n  model: yup.string().required(\"Обязательное поле\"),\r\n  yearOfIssue: yup.string().required(\"Обязательное поле\"),\r\n});\r\n\r\nexport const AddTerminalModal = ({ handleClose, open }) => {\r\n  const { handleSubmit, control, register, errors, reset } = useForm({\r\n    resolver: yupResolver(terminalSchema),\r\n  });\r\n\r\n  const loadingStatus = useSelector(selectAddTerminalStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (data) => {\r\n    dispatch(fetchAddTerminal(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogContent>\r\n        <DialogTitle>Добавить терминал</DialogTitle>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"model\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Модель терминала\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                type=\"text\"\r\n                name=\"model\"\r\n                helperText={errors.model?.message}\r\n                error={!!errors.model}\r\n                autoComplete=\"off\"\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"city\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Город\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name=\"city\"\r\n                helperText={errors.city?.message}\r\n                error={!!errors.city}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"address\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Адрес\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name=\"address\"\r\n                helperText={errors.address?.message}\r\n                error={!!errors.address}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"organization\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Организация\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                type=\"text\"\r\n                name=\"organization\"\r\n                helperText={errors.organization?.message}\r\n                error={!!errors.organization}\r\n                autoComplete=\"off\"\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"yearOfIssue\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Год изготовления\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name=\"yearOfIssue\"\r\n                helperText={errors.yearOfIssue?.message}\r\n                error={!!errors.yearOfIssue}\r\n              />\r\n            )}\r\n          />\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disabled={loadingStatus === \"LOADING\"}\r\n            >\r\n              {loadingStatus === \"LOADING\" ? \"Добавление...\" : \"Добавить\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","export const USER_ACTION_TYPES = {\r\n  FETCH_USER_DATA: \"user/FETCH_USER_DATA\",\r\n  FETCH_USER_REGISTER: \"user/FETCH_USER_REGISTER\",\r\n  CHECK_USER_DATA: \"user/CHECK_USER_DATA\",\r\n  SET_USER_DATA: \"user/SET_USER_DATA\",\r\n  SET_LOADING_STATE: \"user/SET_LOADING_STATE\",\r\n  SET_AUTH_LOADING_STATE: \"user/SET_AUTH_LOADING_STATE\",\r\n  FETCH_USER_LOGOUT: \"user/FETCH_USER_LOGOUT\"\r\n};\r\n\r\nexport const fetchSignIn = (payload) => ({\r\n  type: USER_ACTION_TYPES.FETCH_USER_DATA,\r\n  payload,\r\n});\r\n\r\nexport const fetchLogout = () => ({\r\n  type: USER_ACTION_TYPES.FETCH_USER_LOGOUT\r\n});\r\n\r\nexport const fetchRegister = (payload) => ({\r\n  type: USER_ACTION_TYPES.FETCH_USER_REGISTER,\r\n  payload,\r\n});\r\n\r\nexport const setUserData = (payload) => ({\r\n  type: USER_ACTION_TYPES.SET_USER_DATA,\r\n  payload,\r\n});\r\n\r\nexport const setUserLoadingState = (payload) => ({\r\n  type: USER_ACTION_TYPES.SET_LOADING_STATE,\r\n  payload,\r\n});\r\nexport const setRegisterLoadingState = (payload) => ({\r\n  type: USER_ACTION_TYPES.SET_AUTH_LOADING_STATE,\r\n  payload,\r\n});\r\n\r\nexport const checkUserData = () => ({\r\n  type: USER_ACTION_TYPES.CHECK_USER_DATA,\r\n});\r\n","export const selectUserState = (state) => state.user;\r\n\r\nexport const selectUserData = (state) => selectUserState(state).data;\r\n\r\nexport const selectIsAuth = (state) => !!selectUserData(state);\r\nexport const selectIsAdmin = (state) => selectUserData(state).isAdmin;\r\nexport const selectCanEdit = (state) => selectUserData(state).canEdit;\r\n\r\nexport const selectLoadingUserState = (state) =>\r\n  selectUserState(state).loadingStatus;\r\n\r\nexport const selectRegisterLoadingState = (state) =>\r\n  selectUserState(state).registerLoadingStatus;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchRegister } from \"./../store/ducks/user/actionCreators\";\r\nimport { selectRegisterLoadingState } from \"../store/ducks/user/selectors\";\r\n\r\nconst userSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required(\"Обязательное поле\")\r\n    .min(2, \"Минимальное количество символов 2\")\r\n    .max(40, \"Максимальное количество символов 40\"),\r\n  password: yup.string().required(\"Обязательное поле\"),\r\n  confirm: yup.string().oneOf([yup.ref(\"password\")], \"Пароли не совпадают\"),\r\n});\r\n\r\nexport const AddUserModal = ({ handleClose, open }) => {\r\n  const { handleSubmit, control, register, errors, reset } = useForm({\r\n    resolver: yupResolver(userSchema),\r\n  });\r\n\r\n  const loadingStatus = useSelector(selectRegisterLoadingState);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (data) => {\r\n    dispatch(fetchRegister(data));\r\n    reset();\r\n  };\r\n\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogContent>\r\n        <DialogContentText style={{ textAlign: \"center\" }}>\r\n          {loadingStatus === \"ERROR\" && (\r\n            <span style={{ color: \"rgb(220, 0, 78)\" }}>\r\n              Ошибка при регистрации\r\n            </span>\r\n          )}\r\n          {loadingStatus === \"SUCCESS\" && (\r\n            <span style={{ color: \"#a6e22e\" }}>Регистрация прошла успешно</span>\r\n          )}\r\n        </DialogContentText>\r\n        <DialogTitle>Создать пользователя</DialogTitle>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Логин\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                type=\"text\"\r\n                name=\"username\"\r\n                helperText={errors.username?.message}\r\n                error={!!errors.username}\r\n                autoComplete=\"off\"\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Пароль\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"password\"\r\n                fullWidth\r\n                name=\"password\"\r\n                helperText={errors.password?.message}\r\n                error={!!errors.password}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"confirm\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={() => (\r\n              <TextField\r\n                inputRef={register}\r\n                label=\"Повторите пароль\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"password\"\r\n                fullWidth\r\n                name=\"confirm\"\r\n                helperText={errors.confirm?.message}\r\n                error={!!errors.confirm}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"canEdit\"\r\n            control={control}\r\n            defaultValue={false}\r\n            rules={{ required: true }}\r\n            render={(props) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={(e) => props.onChange(e.target.checked)}\r\n                    checked={props.value}\r\n                    name=\"canEdit\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Разрешить пользователю редактировать данные\"\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"isAdmin\"\r\n            control={control}\r\n            defaultValue={false}\r\n            rules={{ required: true }}\r\n            render={(props) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={(e) => props.onChange(e.target.checked)}\r\n                    checked={props.value}\r\n                    name=\"isAdmin\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Дать права администратора\"\r\n              />\r\n            )}\r\n          />\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disabled={loadingStatus === \"LOADING\"}\r\n            >\r\n              {loadingStatus === \"LOADING\" ? \"Создание...\" : \"Создать\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AddTerminalModal } from \"./AddTerminalModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLogout } from './../store/ducks/user/actionCreators';\r\nimport { selectIsAdmin, selectCanEdit } from './../store/ducks/user/selectors';\r\nimport { AddUserModal } from './addUserModal';\r\n\r\nexport const useSideMenuStyles = makeStyles({\r\n  sideMenuWrapper: {},\r\n  sideMenuContent: {\r\n    height: \"100%\",\r\n    padding: 10,\r\n    border: \"none\",\r\n    borderRight: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n  },\r\n  notification: {\r\n    textAlign: \"center\",\r\n    color: \"#a6e22e\"\r\n  },\r\n  redColor: {\r\n    color: \"rgb(220, 0, 78);\"\r\n  }\r\n});\r\n\r\nexport const SideMenu = () => {\r\n  const classes = useSideMenuStyles();\r\n  const dispatch = useDispatch();\r\n  const isAdmin = useSelector(selectIsAdmin);\r\n  const canEdit = useSelector(selectCanEdit)\r\n\r\n\r\n  const [addTerminalOpen, setAddTerminalOpen] = React.useState(false);\r\n  const [addUserOpen, setAddUserOpen] = React.useState(false)\r\n\r\n  const handleToggleAddTerminal = () => {\r\n    setAddTerminalOpen(!addTerminalOpen);\r\n  };\r\n\r\n  const handleCloseAddTerminal = () => {\r\n    setAddTerminalOpen(false);\r\n  };\r\n\r\n  const handleToggleAddUser = () => {\r\n    setAddUserOpen(!addUserOpen)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    dispatch(fetchLogout())\r\n  }\r\n\r\n  return (\r\n    <Grid md={2} className={classes.sideMenuWrapper} item>\r\n      <Paper\r\n        className={classes.sideMenuContent}\r\n        elevation={0}\r\n        variant=\"outlined\"\r\n        square\r\n      >\r\n        <List>\r\n          {isAdmin && <ListItem button onClick={handleToggleAddUser}>Создать нового пользователя</ListItem>}\r\n          {(canEdit || isAdmin) && <ListItem button onClick={handleToggleAddTerminal}>Добавить новый терминал</ListItem>}\r\n          <ListItem button onClick={handleLogout}>Выйти</ListItem>\r\n        </List>\r\n      </Paper>\r\n      <AddTerminalModal handleClose={handleCloseAddTerminal} open={addTerminalOpen} />\r\n      <AddUserModal handleClose={handleToggleAddUser} open={addUserOpen} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTerminalsItem } from \"../store/ducks/terminals/selectors\";\r\nimport {\r\n  fetchTerminals,\r\n  fetchRemoveTerminals,\r\n} from \"../store/ducks/terminals/actionCreators\";\r\nimport { selectTerminalsIsLoading } from \"./../store/ducks/terminals/selectors\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { selectIsAdmin } from \"../store/ducks/user/selectors\";\r\nimport { selectCanEdit } from './../store/ducks/user/selectors';\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  // сортировщик\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  // выбор сортировщика\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  // конечная функция которая выбирает сортировщика\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  // заголовки таблицы\r\n  {\r\n    id: \"model\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Название модели\",\r\n  },\r\n  { id: \"city\", numeric: true, disablePadding: false, label: \"Город\" },\r\n  {\r\n    id: \"organization\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Организация\",\r\n  },\r\n  { id: \"address\", numeric: true, disablePadding: false, label: \"Адрес\" },\r\n  {\r\n    id: \"yearOfIssue\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Год выпуска\",\r\n  },\r\n  {\r\n    id: \"isOnline\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Статус\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  // шапка таблицы\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    isAdmin,\r\n    canEdit\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    // cоздает функцию обраточика события\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        { (isAdmin || canEdit) && <TableCell padding=\"checkbox\">\r\n          <Checkbox // чекбокс в шапке\r\n            indeterminate={numSelected > 0 && numSelected < rowCount} // выбрано больше 1 но меньше количества строк\r\n            checked={rowCount > 0 && numSelected === rowCount} // выбраны все строки\r\n            onChange={onSelectAllClick} // обработчик клика по чекбоксу\r\n            inputProps={{ \"aria-label\": \"Выбрать все терминалы\" }}\r\n          />\r\n        </TableCell>}\r\n        {headCells.map((\r\n          headCell // мапинг по заголовкам таблицы\r\n        ) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false} // направление сортировки\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id} // провеяет активна ли ячейка\r\n              direction={orderBy === headCell.id ? order : \"asc\"} // model === city???\r\n              onClick={createSortHandler(headCell.id)} // (event) => { onRequestSort(name) }\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  // типизация пропсов\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  canEdit: PropTypes.bool.isRequired,\r\n  isAdmin: PropTypes.bool.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  // стили панели инструментов\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n  searchForm: {\r\n    display: \"flex\",\r\n  },\r\n  searchInput: {\r\n    width: 300,\r\n    margin: \"0 20px\",\r\n  },\r\n  searchSelect: {\r\n    \"& select\": {\r\n      width: 150\r\n    }\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected, handleRemoveItems } = props; // количество выбранных строк\r\n  const classes = useToolbarStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [visibleSearchField, setVisibleSearchField] = useState(false);\r\n\r\n  const { handleSubmit, register } = useForm();\r\n  const onSubmit = (searchFromData) => {\r\n    dispatch(fetchTerminals(searchFromData));\r\n  };\r\n\r\n  const handlerClickOnFilter = () => {\r\n    setVisibleSearchField(!visibleSearchField);\r\n  };\r\n\r\n  const handlerClickOnRefresh = () => {\r\n    dispatch(fetchTerminals());\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} Выбрано\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Терминалы\r\n        </Typography>\r\n      )}\r\n      {visibleSearchField && (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.searchForm}>\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"searchSelect\">Поле</InputLabel>\r\n            <Select\r\n              name=\"orderBy\"\r\n              className={classes.searchSelect}\r\n              native\r\n              label=\"field\"\r\n              inputProps={{\r\n                name: \"orderBy\",\r\n                id: \"searchSelect\",\r\n              }}\r\n              inputRef={register}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              <option value=\"model\">Название модели</option>\r\n              <option value=\"city\">Город</option>\r\n              <option value=\"organization\">Организация</option>\r\n              <option value=\"address\">Адрес</option>\r\n              <option value=\"yearOfIssue\">Год выпуска</option>\r\n              <option value=\"isOnline\">Статус</option>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            inputRef={register}\r\n            name=\"searchValue\"\r\n            variant=\"outlined\"\r\n            label=\"Значение\"\r\n            type=\"search\"\r\n            className={classes.searchInput}\r\n            autoComplete=\"off\"\r\n          />\r\n        </form>\r\n      )}\r\n      <Tooltip title=\"Обновить\" onClick={handlerClickOnRefresh}>\r\n          <IconButton aria-label=\"Обновить список\">\r\n            <AutorenewIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Удалить\">\r\n          <IconButton aria-label=\"delete\" onClick={handleRemoveItems}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Поиск\" onClick={handlerClickOnFilter}>\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  handleRemoveItems: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  offline: {\r\n    color: \"#d32f2f\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  online: {\r\n    color: \"#4caf50\",\r\n    fontWeight: \"bold\"\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\"); // по возрастанию или по убыванию\r\n  const [orderBy, setOrderBy] = React.useState(\"model\"); // полу по которому будет сортировка\r\n  const [selected, setSelected] = React.useState([]); // выбранные строки\r\n  const [page, setPage] = React.useState(0); // страница пагинации\r\n  const [dense, setDense] = React.useState(false); // управление паддингами\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); // количество строк в таблице\r\n\r\n  const terminals = useSelector(selectTerminalsItem);\r\n  const terminalsIsLoading = useSelector(selectTerminalsIsLoading);\r\n  const isAdmin = useSelector(selectIsAdmin);\r\n  const canEdit = useSelector(selectCanEdit);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTerminals());\r\n  }, [dispatch]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    // обработчик клика на выбор всех строк\r\n    if (event.target.checked) {\r\n      const newSelecteds = terminals.map((n) => n._id); // данные\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleRemoveSelectedTerminals = () => {\r\n    dispatch(fetchRemoveTerminals(selected));\r\n    setSelected([]);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1; // выбрана ли страница\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, terminals.length - page * rowsPerPage); // количество пустых строк затем умнож-ся на высоту строки\r\n\r\n  if (terminalsIsLoading) {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          handleRemoveItems={handleRemoveSelectedTerminals}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={terminals.length}\r\n              isAdmin={isAdmin}\r\n              canEdit={canEdit}\r\n            />\r\n            <TableBody>\r\n              {stableSort(terminals, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) // участок массива\r\n                .map((terminal, index) => {\r\n                  const isItemSelected = isSelected(terminal._id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={terminal._id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {(isAdmin || canEdit) && <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, terminal._id)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>}\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"default\"\r\n                      >\r\n                        {terminal.model}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{terminal.city}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {terminal.organization}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{terminal.address}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {terminal.yearOfIssue}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" className={terminal.isOnline ? classes.online : classes.offline}>\r\n                        {terminal.isOnline ? \"online\" : \"offline\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={terminals.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Уменьшить отступы\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { SideMenu } from './../components/SideMenu';\r\nimport EnhancedTable from './../components/TerminalTable';\r\n\r\nconst useHomeStyles = makeStyles({\r\n    homePageWrapper: {\r\n       display: \"flex\",\r\n       flexDirection: \"column\",\r\n    },\r\n    homePageContainer: {\r\n        flex: \"1 1 auto\"\r\n    },\r\n    homeMain: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    },\r\n    homeContent: {\r\n        border: \"none\",\r\n        padding: 10,\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\nexport const HomePage = () => {\r\n  const classes = useHomeStyles();\r\n  return (\r\n    <Grid className={classes.homePageWrapper} md={12} item>\r\n      <Grid container className={classes.homePageContainer}>\r\n        <SideMenu />\r\n        <Grid md={10} className={classes.homeMain} item>\r\n          <Paper className={classes.homeContent}  elevation={0} variant=\"outlined\" square>\r\n              <EnhancedTable />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoadingUserState } from \"../store/ducks/user/selectors\";\r\nimport { fetchSignIn } from \"../store/ducks/user/actionCreators\";\r\n\r\nexport const LOADING_STATUSES = {\r\n    NEVER: \"NEVER\",\r\n    LOADING: \"LOADING\",\r\n    LOADED: \"LOADED\",\r\n    ERROR: \"ERROR\",\r\n    SUCCESS: \"SUCCESS\" \r\n  };\r\n\r\n\r\nconst signinSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required(\"Обязательное поле\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Обязательное поле\")\r\n});\r\n\r\nexport const AuthPage= () => {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    register,\r\n    errors,\r\n  } = useForm({\r\n    resolver: yupResolver(signinSchema),\r\n  });\r\n\r\n  const loadingStatus = useSelector(selectLoadingUserState);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (data) => {\r\n    dispatch(fetchSignIn(data))\r\n  };\r\n\r\n\r\n  return (\r\n    <DialogContent style={{flex: \"0 0 500px\"}}>\r\n    <DialogTitle style={{textAlign: \"center\"}}>Введите ваш логин и пароль</DialogTitle>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          name=\"username\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          rules={{ required: true }}\r\n          render={() => (\r\n            <TextField\r\n              inputRef={register}\r\n              label=\"Логин\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              type=\"text\"\r\n              name=\"username\"\r\n              helperText={errors.username?.message}\r\n              error={!!errors.username}\r\n              autoComplete=\"off\"\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          rules={{ required: true }}\r\n          render={() => (\r\n            <TextField\r\n              inputRef={register}\r\n              label=\"Пароль\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              fullWidth\r\n              name=\"password\"\r\n              helperText={errors.password?.message}\r\n              error={!!errors.password}\r\n            />\r\n          )}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          disabled={loadingStatus === LOADING_STATUSES.LOADING}\r\n          style={{marginTop: 20}}\r\n        >\r\n          Войти\r\n        </Button>\r\n      </form>\r\n    </DialogContent>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { HomePage } from \"./pages/HomePage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsAuth, selectLoadingUserState } from \"./store/ducks/user/selectors\";\nimport { AuthPage } from \"./pages/AuthPage\";\nimport {checkUserData} from \"./store/ducks/user/actionCreators\"\n\nexport const LOADING_STATUSES = {\n  NEVER: \"NEVER\",\n  LOADING: \"LOADING\",\n  LOADED: \"LOADED\",\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\" \n};\n\nconst useAppStyles = makeStyles({\n  appWrapper: {\n    backgroundColor: \"#bfbfbf\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: 10,\n  },\n  appContainer: {\n    flex: \"1 1 auto\",\n    margin: \"0 auto\",\n    maxWidth: 1200,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    boxShadow: \"5px 3px 13px 1px rgba(0,0,0,0.63)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  preloader: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n});\n\n\n\nfunction App() {\n  const classes = useAppStyles();\n  const dispatch = useDispatch();\n\n  const userLoadingStatus = useSelector(selectLoadingUserState)\n  const isAuth = useSelector(selectIsAuth);\n\n  const isReady =\n    userLoadingStatus !== LOADING_STATUSES.LOADING &&\n    userLoadingStatus !== LOADING_STATUSES.NEVER;\n\n\n  useEffect(() => {\n    dispatch(checkUserData())\n  }, [dispatch]);\n\n  if (!isReady) {\n    return (\n      <div className={classes.preloader} >\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.appWrapper}>\n      <Grid container className={classes.appContainer}>\n        {isAuth ? <HomePage /> : <AuthPage />}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import produce from \"immer\";\r\nimport { TERMINALS_ACTION_TYPES } from './actionCreators';\r\n\r\nexport const LOADING_STATUSES = {\r\n  NEVER: \"NEVER\",\r\n  LOADING: \"LOADING\",\r\n  LOADED: \"LOADED\",\r\n  ERROR: \"ERROR\",\r\n  SUCCESS: \"SUCCESS\" \r\n};\r\n\r\n\r\nconst initialTerminalsState = {\r\n  items: [],\r\n  loadingStatus: LOADING_STATUSES.NEVER,\r\n  statusAddTerminal: LOADING_STATUSES.NEVER\r\n};\r\n\r\nexport const terminalsReducer = produce(\r\n  (draft, action) => {\r\n    switch (action.type) {\r\n      case TERMINALS_ACTION_TYPES.SET_TERMINALS:\r\n        draft.items = action.payload;\r\n        draft.loadingStatus = LOADING_STATUSES.LOADED;\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.FETCH_TERMINALS:\r\n        draft.items = [];\r\n        draft.loadingStatus = LOADING_STATUSES.LOADING;\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.FETCH_REMOVE_TERMINALS: \r\n        draft.loadingStatus = LOADING_STATUSES.LOADING;\r\n        draft.items = [];\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.FETCH_ADD_NEW_TERMINAL:\r\n        draft.statusAddTerminal = LOADING_STATUSES.LOADING;\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.SET_LOADING_STATUS_ADD_TERMINAL:\r\n        draft.statusAddTerminal = action.payload;\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.SET_NEW_TERMINAL:\r\n        draft.items.push(action.payload);\r\n        draft.statusAddTerminal = LOADING_STATUSES.NEVER;\r\n        break;\r\n      case TERMINALS_ACTION_TYPES.SET_LOADING_STATUS:\r\n        draft.loadingStatus = action.payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  initialTerminalsState\r\n);\r\n","import produce from \"immer\";\r\nimport { USER_ACTION_TYPES } from \"./actionCreators\";\r\n\r\nexport const LOADING_STATUSES = {\r\n  NEVER: \"NEVER\",\r\n  LOADING: \"LOADING\",\r\n  LOADED: \"LOADED\",\r\n  ERROR: \"ERROR\",\r\n  SUCCESS: \"SUCCESS\",\r\n};\r\n\r\nconst initialUserState = {\r\n  data: undefined,\r\n  loadingStatus: LOADING_STATUSES.NEVER,\r\n  registerLoadingStatus: LOADING_STATUSES.NEVER,\r\n};\r\n\r\nexport const userReducer = produce((draft, action) => {\r\n  switch (action.type) {\r\n    case USER_ACTION_TYPES.SET_USER_DATA:\r\n      draft.data = action.payload;\r\n      draft.loadingStatus = LOADING_STATUSES.SUCCESS;\r\n      break;\r\n    case USER_ACTION_TYPES.SET_LOADING_STATE:\r\n      draft.loadingStatus = action.payload;\r\n      break;\r\n    case USER_ACTION_TYPES.FETCH_USER_DATA:\r\n      draft.loadingStatus = LOADING_STATUSES.LOADING;\r\n      break;\r\n    case USER_ACTION_TYPES.SET_AUTH_LOADING_STATE:\r\n      draft.registerLoadingStatus = action.payload;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}, initialUserState);\r\n","import { combineReducers } from \"redux\";\r\nimport { terminalsReducer } from './ducks/terminals/terminalsReducer';\r\nimport { userReducer } from './ducks/user/userReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    terminals: terminalsReducer,\r\n    user: userReducer\r\n});\r\n\r\n\r\n","import axios from 'axios';\r\n\r\naxios.interceptors.request.use((config) => {\r\n    config.headers[\"token\"] = window.localStorage.getItem(\"token\")\r\n    return config\r\n})\r\n\r\nexport {axios}","import { axios } from \"../core/axios\";\r\n\r\n\r\nexport const TerminalsApi = {\r\n  fetchAllTerminals: async () => {\r\n    const { data } = await axios.get(\"/terminals\" );\r\n    return data.data;\r\n  },\r\n  fetchSearchTerminal: async (searchConfig) => {\r\n    const  {data} = await axios.get(`/terminals?${searchConfig.orderBy}=${searchConfig.searchValue}`)\r\n    return data.data;\r\n  },\r\n  removeTerminals: async (arrayTerminals) => {\r\n    const { data } = await axios.delete(\"/terminals/delete\", {\r\n      data: { arrayTerminals },\r\n    });\r\n    return data.data;\r\n  },\r\n  addTerminal: async (formData) => {\r\n    const { data } = await axios.post(\"/terminals\", formData);\r\n    return data.data;\r\n  },\r\n};\r\n\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { TerminalsApi } from './../../../api/terminalsApi';\r\nimport { setLoadingStatus, setTerminals, TERMINALS_ACTION_TYPES, setNewTerminal, setLoadingStatusAddTerminal } from './actionCreators';\r\n\r\n\r\nexport const LOADING_STATUSES = {\r\n  NEVER: \"NEVER\",\r\n  LOADING: \"LOADING\",\r\n  LOADED: \"LOADED\",\r\n  ERROR: \"ERROR\",\r\n  SUCCESS: \"SUCCESS\" \r\n};\r\n\r\n\r\n\r\nexport function* fetchTerminalsRequest({ payload }) {\r\n  try {\r\n    let terminals;\r\n    if (payload) {\r\n      terminals= yield call(TerminalsApi.fetchSearchTerminal, payload);\r\n    } else {\r\n      terminals= yield call(TerminalsApi.fetchAllTerminals);\r\n    }\r\n    yield put(setTerminals(terminals));\r\n  } catch (error) {\r\n    yield put(setLoadingStatus(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\nexport function* fetchRemoveTerminalsRequest({ payload }) {\r\n  try {\r\n    const terminals = yield call(TerminalsApi.removeTerminals, payload);\r\n    yield put(setTerminals(terminals));\r\n  } catch (error) {\r\n    yield put(setLoadingStatus(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\nexport function* fetchAddTerminalRequest({payload}) {\r\n  try {\r\n    const newTerminal = yield call(TerminalsApi.addTerminal, payload);\r\n    yield put(setNewTerminal(newTerminal));\r\n  } catch (error) {\r\n    console.log(error)\r\n    yield put(setLoadingStatusAddTerminal(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\nexport function* terminalsSaga() {\r\n  yield takeEvery(TERMINALS_ACTION_TYPES.FETCH_TERMINALS, fetchTerminalsRequest);\r\n  yield takeEvery(TERMINALS_ACTION_TYPES.FETCH_REMOVE_TERMINALS, fetchRemoveTerminalsRequest);\r\n  yield takeEvery(TERMINALS_ACTION_TYPES.FETCH_ADD_NEW_TERMINAL, fetchAddTerminalRequest)\r\n}\r\n\r\n","import { axios } from \"../core/axios\";\r\n\r\nexport const AuthApi = {\r\n  login: async (loginData) => {\r\n    const { data } = await axios.post(\"/auth/login\", loginData);\r\n    return data.data;\r\n  },\r\n  register: async (registerData) => {\r\n    const { data } = await axios.post(\"/auth/register\", registerData);\r\n    return data.data;\r\n  },\r\n  getMe: async () => {\r\n    const { data } = await axios.get(\"/users/me\");\r\n    return data.data;\r\n  }\r\n};\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { setUserData, USER_ACTION_TYPES, setUserLoadingState, setRegisterLoadingState } from './actionCreators';\r\nimport { AuthApi } from './../../../api/authApi';\r\n\r\nexport const LOADING_STATUSES = {\r\n  NEVER: \"NEVER\",\r\n  LOADING: \"LOADING\",\r\n  LOADED: \"LOADED\",\r\n  ERROR: \"ERROR\",\r\n  SUCCESS: \"SUCCESS\" \r\n};\r\n\r\n\r\nexport function* fetchSignInRequest({ payload }) {\r\n  try {\r\n    yield put(setUserLoadingState(LOADING_STATUSES.LOADING));\r\n    const data= yield call(AuthApi.login, payload);\r\n    yield put(setUserData(data));\r\n    window.localStorage.setItem(\"token\", data.token);\r\n  } catch (error) {\r\n    yield put(setUserLoadingState(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\nexport function* fetchLogoutRequest() {\r\n  window.localStorage.removeItem(\"token\");\r\n  yield put(setUserData(undefined))\r\n}\r\n\r\nexport function* fetchRegisterRequest({ payload }) {\r\n  try {\r\n    yield put(setRegisterLoadingState(LOADING_STATUSES.LOADING));\r\n    yield call(AuthApi.register, payload);\r\n    yield put(setRegisterLoadingState(LOADING_STATUSES.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setRegisterLoadingState(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\nexport function* fetchCheckUserDataRequest() {\r\n  try {\r\n    yield put(setUserLoadingState(LOADING_STATUSES.LOADING));\r\n    const data= yield call(AuthApi.getMe);\r\n    yield put(setUserData(data))\r\n    yield put(setUserLoadingState(LOADING_STATUSES.SUCCESS));\r\n  } catch (error) {\r\n    yield put(setUserLoadingState(LOADING_STATUSES.ERROR));\r\n  }\r\n}\r\n\r\n\r\nexport function* userSaga() {\r\n  yield takeEvery(USER_ACTION_TYPES.FETCH_USER_DATA, fetchSignInRequest);\r\n  yield takeEvery(USER_ACTION_TYPES.FETCH_USER_REGISTER, fetchRegisterRequest);\r\n  yield takeEvery(USER_ACTION_TYPES.CHECK_USER_DATA, fetchCheckUserDataRequest);\r\n  yield takeEvery(USER_ACTION_TYPES.FETCH_USER_LOGOUT, fetchLogoutRequest);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { terminalsSaga } from \"../store/ducks/terminals/saga\";\r\nimport { userSaga } from \"../store/ducks/user/saga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([terminalsSaga(), userSaga()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\n\r\n\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from './store/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <CssBaseline />\n        <App />\n      </Router>\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}